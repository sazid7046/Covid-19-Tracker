{"version":3,"sources":["Header.js","InfoBox.js","util.js","Map.js","LeftSide.js","Table.js","Chart.js","RighSide.js","Covid.js","App.js","index.js"],"names":["Header","countries","onCountryChange","country","Fragment","className","Typography","variant","Select","onChange","value","MenuItem","map","name","InfoBox","title","isRed","active","cases","total","props","Card","onClick","CardContent","color","gutterBottom","casesTypeColors","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","numeral","format","showDataOnMap","casesType","Circle","center","countryInfo","lat","long","fillColor","fillOpacity","radius","Math","sqrt","Popup","style","backgroundImage","flag","Map","mapCountry","zoom","TileLayer","url","attribution","LeftSide","mapCenter","mapZoom","setCasesType","e","todayCases","todayRecovered","todayDeaths","Table","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","Chart","useState","setData","useEffect","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","RighSide","Covid","setCountries","setCountry","setCountryInfo","tableData","setTableData","mapCountries","setMapCountries","lng","setMapCenter","setMapZoom","iso2","getCountriesData","event","countryCode","target","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d469e266.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MenuItem, Select, Typography } from '@material-ui/core';\r\nimport './Header.css'\r\n\r\nfunction Header({countries, onCountryChange, country}) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className='header'>\r\n        <Typography variant='h5'>Covid-19 Tracker</Typography>\r\n      <Select variant='outlined' onChange={onCountryChange} value={country}>\r\n        <MenuItem value='worldwide'>worldwide</MenuItem>\r\n        {countries.map(country => {\r\n         return <MenuItem value={country.value}>{country.name}</MenuItem>\r\n        })}\r\n      </Select>\r\n      </div>\r\n      \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { Card, CardContent, Typography } from '@material-ui/core'\r\nimport React from 'react';\r\nimport './InfoBox.css'\r\n\r\nfunction InfoBox({title, isRed, active, cases, total, ...props}) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className='infoBox'>\r\n      <Card\r\n      onClick={props.onClick}\r\n      className={`infoBox ${active && \"infoBox--selected\"} ${\r\n        isRed && \"infoBox--red\"\r\n      }`}\r\n    >\r\n      <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <h2 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\r\n          {cases}\r\n        </h2>\r\n\r\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\r\n          {total} Total\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default InfoBox\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\nimport './Map.css';\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    multiplier: 400,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    multiplier:600,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    multiplier: 1000,\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  let sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.cases > b.cases) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n  return sortedData;\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup> \r\n    </Circle>\r\n  ));\r\n","import React from \"react\";\r\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport { showDataOnMap } from \"./util\";\r\n\r\nfunction Map({ mapCountry, casesType, center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <LeafletMap center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(mapCountry, casesType)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\nimport Header from './Header';\r\nimport InfoBox from './InfoBox';\r\nimport Map from './Map';\r\nimport './LeftSide.css';\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport {prettyPrintStat} from './util';\r\nimport numeral from 'numeral';\r\n\r\n\r\nfunction LeftSide({countries, onCountryChange, country, countryInfo, mapCenter,mapZoom, mapCountry,\r\n  setCasesType, casesType}) {\r\n  return (\r\n    <div className='leftSide'>\r\n      <Header \r\n      countries={countries} \r\n      onCountryChange={onCountryChange}\r\n      country = {country} />\r\n      <div className='leftSide__Card'>\r\n        <div className='leftSide__box1'>\r\n          <InfoBox\r\n                onClick={(e) => setCasesType(\"cases\")}\r\n                title=\"Coronavirus Cases\"\r\n                isRed\r\n                active={casesType === \"cases\"}\r\n                cases={prettyPrintStat(countryInfo.todayCases)}\r\n                total={numeral(countryInfo.cases).format(\"0.0a\")}\r\n              />\r\n         </div>\r\n        <div className='leftSide__box1'>\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"recovered\")}\r\n            title=\"Recovered\"\r\n            active={casesType === \"recovered\"}\r\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\r\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\r\n          />\r\n        </div>\r\n        <div className='leftSide__box1'>\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"deaths\")}\r\n            title=\"Deaths\"\r\n            isRed\r\n            active={casesType === \"deaths\"}\r\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\r\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\r\n          />\r\n          </div>\r\n      </div>\r\n      \r\n      <Map\r\n      countries={countries}\r\n      center={mapCenter}\r\n      zoom={mapZoom}\r\n      mapCountry={mapCountry}\r\n      casesType={casesType}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeftSide\r\n","import React from 'react';\r\nimport './Table.css'\r\n\r\nfunction Table({countries}) {\r\n  return (\r\n    <div className='table'>\r\n     {countries.map(({country, cases}) => {\r\n      return <tr>\r\n         <td>{country}</td>\r\n         <td><strong>{cases}</strong></td>\r\n       </tr>\r\n     })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction Chart({ casesType = 'cases'}) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n        options={options}\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Table from './Table';\r\nimport Chart from './Chart'\r\nimport { Card, CardContent, Typography } from '@material-ui/core';\r\nimport './RighSide.css'\r\n\r\nfunction RighSide({countries, casesType}) {\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant='h6'>Lives Cases by Country</Typography>\r\n          <Table countries={countries}/>\r\n          <Typography variant='h6' gutterBottom className='title'>worldwide new cases</Typography>\r\n          <Chart casesType={casesType}/>\r\n        </CardContent>\r\n      </Card>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RighSide\r\n","import React, {useState, useEffect} from 'react';\r\nimport LeftSide from './LeftSide';\r\nimport RightSide from './RighSide';\r\nimport { sortData} from \"./util\";\r\nimport './Covid.css'\r\n\r\nfunction Covid() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [country, setCountry] = useState('worldwide');\r\n  const [countryInfo, setCountryInfo] =useState({});\r\n  const [tableData, setTableData] = useState([]);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\r\n  const [mapZoom, setMapZoom] = useState(3);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n\r\n  useEffect(() => {\r\n    fetch('https://disease.sh/v3/covid-19/all')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setCountryInfo(data);\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      await fetch('https://disease.sh/v3/covid-19/countries')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const countries = data.map((country) => ({\r\n          name: country.country,\r\n          value: country.countryInfo.iso2\r\n        }));\r\n        const sortedData = sortData(data);\r\n        setTableData(sortedData);\r\n        setCountries(countries);\r\n        setMapCountries(data);\r\n      });\r\n    };\r\n    getCountriesData();\r\n  }, [])\r\n\r\n  const onCountryChange = async (event) => {\r\n    const countryCode = event.target.value\r\n    setCountry(countryCode);\r\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n\r\n    await fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setCountry(countryCode);\r\n      setCountryInfo(data);\r\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\r\n      setMapZoom(4);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='covid'>\r\n         <LeftSide\r\n          countries={countries} \r\n          country={country}\r\n          onCountryChange={onCountryChange}\r\n          countryInfo={countryInfo}\r\n          mapCenter={mapCenter}\r\n          mapZoom={mapZoom}\r\n          mapCountry={mapCountries}\r\n          casesType={casesType}\r\n          setCasesType={setCasesType}/> \r\n         <RightSide \r\n         countries={tableData}\r\n         casesType={casesType}/>\r\n      </div>\r\n     \r\n     \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Covid\r\n","import React from 'react';\nimport Covid from './Covid';\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Covid/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}